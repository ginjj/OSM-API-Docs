FORMAT: 1A
HOST: https://www.onlinescoutmanager.co.uk/
# @ginnjj changed host to https://www.onlinescoutmanager.co.uk/ for UK

# Online Scout Manager

I'm documenting the Online Scout Manager API here as I discover it,
you can contribute by forking it on GitHub.

## Authorisation [/users.php?action=authorise]

### Authorise [POST]

Note you need email and password the first time to authorise your application against your account, 
after that you can use the usertoken.

request needs to be urlencoded

+ Parameters

    + token (string, required) - your OSM API token
    + apiid (string, required) - your OSM API ID
    + email (string, required) - your OSM login email address
    + password (string, required) - your OSM login password
    
+ Request (application/x-www-form-urlencoded)
    
        email={email}&
        password={password}&
        token={token}&
        apiid={apiid}

+ Response 200 (application/json)
        
        {
            "secret": "1234567890abcdef",
            "userid": "123"
        }

### Authenticating Other Endpoints [POST]
To authenticate _any_ other endpoints you'll need to submit this in the body

+ Parameters

    + token (string, required) - your OSM API token
    + apiid (string, required) - your OSM API ID
    + secret (string, required) - secret from auth call
    + userid (string, required) - userid from auth call
    
+ Request (application/x-www-form-urlencoded)

        token={token}&
        apiid={apiid}&
        userid={userid}&
        secret={secret}

## Sections [/api.php?action=getSectionConfig]

### Get Sections Config [POST]
Used to get the OSM configuration for a specific section

+ Response 200 (application/json)

        {
            "123": {
                "numscouts": 999,
                "subscription_level": 3,
                "subscription_expires": "2050-12-31",
                "portal": {
                    "badges": 1,
                    "programme": 1,
                    "events": 1,
                    "details": 1,
                    "emailbolton": 1
                },
                "portalExpires": {
                    "programme": "2050-12-31",
                    "badges": "2050-12-31",
                    "events": "2050-12-31",
                    "details": "2050-12-31",
                    "emailbolton": "2050-12-31",
                    "badgesA": 0,
                    "programmeA": 0,
                    "eventsA": 0,
                    "detailsA": 0,
                    "emailboltonA": 0
                },
                "section_type": "nzadults",
                "sectionType": "nzadults",
                "parentSectionId": "0",
                "hierarchy_lowest_level": "level_1",
                "hierarchy_operating_level": "level_0"
            },
            "124":{}
        }

### Get List of Sections (Nationally) [POST /ext/members/sectionplanning/?action=listSections&section={}]
Used to get a list of potentail sections. This is very useful for determining where a member should be transferred to, or where an event can be shared to.

+ Parameters
    + section (string, optional) - filters the result down by a specific section.

+ Response 200 (application/json)

        {
            "identifier": "sectionid",
            "label": "name",
            "items": [
                {
                    "name": "NZ Test: Rovers",
                    "sectionid": "8"
                },
                {
                    "name": "Avon Cosgrove Rovers: Rovers",
                    "sectionid": "1007"
                },
                {
                    "name": "Bays Rover Crew: Rovers",
                    "sectionid": "1029"
                },
                {
                    "name": "Crew Otago Rover: Rovers",
                    "sectionid": "1110"
                }
            ]
        }

## Terms [/ext/]

### Get List of Terms [POST /api.php?action=getTerms]
Used to get a list of terms that you have access to.

+ Response 200 (application/json)

        {
            "455": [
                {
                "termid": "8986",
                "sectionid": "1478",
                "name": "2017 - Term 1",
                "startdate": "2017-01-01",
                "enddate": "2017-04-30",
                "master_term": null,
                "past": true
                },
                {
                "termid": "10441",
                "sectionid": "1478",
                "name": "2017 - Term 2",
                "startdate": "2017-05-01",
                "enddate": "2017-07-23",
                "master_term": null,
                "past": true
                },
                {
                "termid": "10442",
                "sectionid": "1478",
                "name": "2017 - Term 3",
                "startdate": "2017-07-24",
                "enddate": "2017-10-08",
                "master_term": null,
                "past": true
                },
                {
                "termid": "10443",
                "sectionid": "1478",
                "name": "2017 - Term 4",
                "startdate": "2017-10-09",
                "enddate": "2018-01-28",
                "master_term": null,
                "past": true
                }
            ]
        }

## Members [/ext/members/contact/]

### Get Member List [POST /ext/members/contact/?action=getListOfMembers&sectionid={}&termid={}]
Used to get a list of members in a section and term, and basic details about each member (name, dob, patrol etc)

+ Parameters
    + sectionid (required, int)
    + termid (required, int)

+ Response 200 (application/json)

        {
            "identifier": "scoutid",
            "photos": true,
            "items": [
                {
                    "firstname": "John",
                    "lastname": "Doe",
                    "photo_guid": "12345678-1234-4567-5678-1234567890ab",
                    "patrolid": -1,
                    "patrol": " ",
                    "sectionid": 12,
                    "enddate": null,
                    "age": "24 / 4",
                    "patrol_role_level_label": "Crew Leader",
                    "active": true,
                    "scoutid": 1233
                },
                {
                    "firstname": "Jane",
                    "lastname": "Doe",
                    "photo_guid": "12345678-1234-4567-5678-1234567890ab",
                    "patrolid": 0,
                    "patrol": "",
                    "sectionid": 12,
                    "enddate": null,
                    "age": "23 / 7",
                    "patrol_role_level_label": "",
                    "active": true,
                    "scoutid": 1234
                }
            ]
        }

### Get Member Information [POST /ext/members/contact/?action=getIndividual&sectionid={}&scoutid={}&termid={}&context=members]]
Gets a detailed list of user data for each member. 

+ Parameters
    + sectionid (required, int) - ID of a section which this member is in
    + scoutid (required, int) - OSM ID of the member
    + termid (required, int) - ID of a term which this member is in
    
+ Response 200 (application/json)
    
    {
        "ok": true,
        "read_only": [],
        "data": {
            "scoutid": "12345",
            "firstname": "First",
            "lastname": "Last",
            "photo_guid": "12345678-1234-4567-5678-1234567890ab",
            "email1": "",
            "phone1": "",
            "address": "",
            "address2": "",
            "dob": "1987-08-05",
            "started": "2004-08-31",
            "joining_in_yrs": "2",
            "parents": "",
            "notes": "",
            "medical": "",
            "religion": "",
            "school": "",
            "ethnicity": "",
            "subs": "",
            "custom1": "",
            "created_date": "0000-00-00 00:00:00",
            "patrolid": "0",
            "patrolleader": "0",
            "startedsection": "2015-06-15",
            "enddate": null,
            "age": "20 years and 1 months",
            "meetings": -1,
            "others": [
                "Another Group: Leaders"
            ]
        }
    }
    
### Get Additional Data [POST /ext/customdata/?action=getData&sectionid={}]
Used to get flexible 'additional data' tables, such as Contact Details, Doctor's Surgery etc

+ Parameters
+ sectionid (reqired, int) - Section ID of the member to get additional data from
+ userid (required, int) - User to get additional data about

+ Request (application/x-www-form-urlencoded)
    associated_id={userid},
    &associated_type=member,
    &context=members,
    &group_order=section
    
+ Response 200
    {
    "status": true,
    "error": null,
    "data": [
      {
         "group_id": 1,
         "config": {
            "panel_height": 440
         },
         "group_type": "grouped",
         "identifier": "contact_primary_1",
         "name": "Primary Contact 1",
         "description": "",
         "is_considered_core": "yes",
         "allow_new_columns": "yes",
         "display": "always",
         "columns": [
            {
               "column_id": 9,
               "type": "text",
               "required": "yes",
               "display_in_advanced_view": "yes",
               "display_if_empty": "yes",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "first_name",
               "label": "First Name",
               "value": "Terry",
               "is_core": "yes",
               "order": "1",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "First Name"
            },
            {
               "column_id": 10,
               "type": "text",
               "required": "yes",
               "display_in_advanced_view": "yes",
               "display_if_empty": "yes",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "last_name",
               "label": "Last Name",
               "value": "Test",
               "is_core": "yes",
               "order": "2",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Last Name"
            },
            {
               "column_id": 49,
               "type": "checkbox",
               "required": "no",
               "display_in_advanced_view": "no",
               "display_if_empty": "yes",
               "hide_from_group_display": "yes",
               "config": {
                  "display": "right"
               },
               "varname": "parent_exguide",
               "label": "Previously has been a scout/guide?",
               "value": "yes",
               "is_core": "yes",
               "order": "3",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Previously has been a scout/guide?"
            },
            {
               "column_id": 1,
               "type": "text",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "no",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "line_1",
               "label": "Address 1",
               "value": "123 Fake St",
               "is_core": "yes",
               "order": "40",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Address 1"
            },
            {
               "column_id": 2,
               "type": "text",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "no",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "line_2",
               "label": "Address 2",
               "value": "Fake Suburb",
               "is_core": "yes",
               "order": "41",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Address 2"
            },
            {
               "column_id": 3,
               "type": "text",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "no",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "line_3",
               "label": "Address 3",
               "value": "FakeTown",
               "is_core": "yes",
               "order": "42",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Address 3"
            },
            {
               "column_id": 4,
               "type": "text",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "no",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "postcode",
               "label": "Postcode",
               "value": "1234",
               "is_core": "yes",
               "order": "43",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Postcode"
            },
            {
               "column_id": 6,
               "type": "text",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "yes",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "mobile_phone",
               "label": "Mobile Phone",
               "value": "1234567890",
               "is_core": "yes",
               "order": "50",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Mobile Phone"
            },
            {
               "column_id": 50,
               "type": "checkbox",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "no",
               "hide_from_group_display": "yes",
               "config": {
                  "display": "right"
               },
               "varname": "mobile_sms",
               "label": "Receive text messages from Leaders?",
               "value": "yes",
               "is_core": "yes",
               "order": "52",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Receive text messages from Leaders?"
            },
            {
               "column_id": 8,
               "type": "text",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "yes",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "home_phone",
               "label": "Home Phone",
               "value": "123456789012",
               "is_core": "yes",
               "order": "55",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Home Phone"
            },
            {
               "column_id": 11,
               "type": "email",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "yes",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "email1",
               "label": "Email 1",
               "value": "foo@bar.com",
               "is_core": "yes",
               "order": "70",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Email 1"
            },
            {
               "column_id": 13,
               "type": "checkbox",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "no",
               "hide_from_group_display": "yes",
               "config": {
                  "display": "right"
               },
               "varname": "email1_leaders",
               "label": "Receive emails from Leaders?",
               "value": "no",
               "is_core": "yes",
               "order": "80",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Receive emails from Leaders?"
            },
            {
               "column_id": 26,
               "type": "checkbox",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "no",
               "hide_from_group_display": "yes",
               "config": {
                  "display": "right"
               },
               "varname": "email1_national_office",
               "label": "Receive emails from National Office?",
               "value": "no",
               "is_core": "yes",
               "order": "85",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Receive emails from National Office?"
            },
            {
               "column_id": 14,
               "type": "email",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "yes",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "email2",
               "label": "Email 2",
               "value": "",
               "is_core": "yes",
               "order": "90",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Email 2"
            },
            {
               "column_id": 16,
               "type": "checkbox",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "no",
               "hide_from_group_display": "yes",
               "config": {
                  "display": "right"
               },
               "varname": "email2_leaders",
               "label": "Receive emails from Leaders?",
               "value": "no",
               "is_core": "yes",
               "order": "100",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Receive emails from Leaders?"
            },
            {
               "column_id": 376,
               "type": "last_updated_by_name",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "no",
               "hide_from_group_display": "yes",
               "config": [],
               "varname": "cf_last_updated_by",
               "label": "Last Updated",
               "value": "Person",
               "is_core": "yes",
               "order": "100",
               "force_read_only": "yes",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Person"
            },
            {
               "column_id": 377,
               "type": "last_updated",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "no",
               "hide_from_group_display": "yes",
               "config": [],
               "varname": "cf_last_updated_time",
               "label": "Time",
               "value": "2017-11-17 14:45:49",
               "is_core": "yes",
               "order": "100",
               "force_read_only": "yes",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Time"
            },
            {
               "column_id": 29,
               "type": "checkbox",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "no",
               "hide_from_group_display": "yes",
               "config": {
                  "display": "right"
               },
               "varname": "email2_national_office",
               "label": "Receive emails from National Office?",
               "value": "no",
               "is_core": "yes",
               "order": "105",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Receive emails from National Office?"
            },
            {
               "column_id": 62,
               "type": "last_updated",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "yes",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "nationaloffice_lastupdated",
               "label": "Last Updated",
               "value": "",
               "is_core": "no",
               "order": "106",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Last Updated"
            },
            {
               "column_id": 63,
               "type": "last_updated_by_name",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "yes",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "nationaloffice_lastupdatedby",
               "label": "Last Updated By",
               "value": "",
               "is_core": "no",
               "order": "107",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Last Updated By"
            },
            {
               "column_id": 64,
               "type": "last_updated_by_id",
               "required": "no",
               "display_in_advanced_view": "yes",
               "display_if_empty": "yes",
               "hide_from_group_display": "no",
               "config": [],
               "varname": "nationaloffice_lastupdatedbyid",
               "label": "Last Updated By (Member ID)",
               "value": "",
               "is_core": "no",
               "order": "108",
               "force_read_only": "no",
               "special_permissions": "no",
               "permissions": [],
               "orig_label": "Last Updated By (Member ID)"
            }
         ]
      }
    ],
    "meta": {
      "group_name": "Pretty Cool Scout Group",
      "section_name": "Scouts"
    }
    } 


### Get Attendance Data [POST /ext/members/attendance/?action=get&sectionid={}&termid={}]
Used to get a list of attendance for programme events

+ Parameters
    + sectionid (required, int) - Section of which you would like to view attendance
    + termid (required, int) - Term in the section that you would like to view attendance

+ Response 200
    {
        "identifier": "scoutid",
        "label": "name",
        "items": [
        {
            "2017-10-17": "Yes",
            "total": 5,
            "2017-10-24": "Yes",
            "2017-10-31": "Yes",
            "2017-11-07": "Yes",
            "2017-11-14": "Yes",
            "firstname": "Jim ",
            "lastname": "Bob",
            "photo_guid": "",
            "patrolid": -2,
            "patrolleader": "0",
            "patrol": "Leaders",
            "dob": "1901-02-22",
            "sectionid": 1478,
            "enddate": null,
            "age": "212 / 10",
            "patrol_role_level_label": "",
            "active": true,
            "scoutid": 666
        },
        {
            "2017-10-17": "Yes",
            "total": 3,
            "2017-10-24": "Yes",
            "2017-10-31": "Yes",
            "2017-11-07": "No",
            "2017-11-14": "No",
            "firstname": "Jack",
            "lastname": "Dick",
            "photo_guid": "",
            "patrolid": 0,
            "patrolleader": "0",
            "patrol": "Default",
            "dob": "2020-02-10",
            "sectionid": 1478,
            "enddate": null,
            "age": "15 / 01",
            "patrol_role_level_label": "",
            "active": true,
            "scoutid": 31315
        }
    ]
}

### Get Attendance Structure [POST /ext/members/attendance/?action=structure&sectionid={}&termid={}]
Gets the structure of the table which is laying out attendance data (including labels etc)

+ Parameters
    + sectionid (required, int) - Section of which you would like to view attendance
    + termid (required, int) - Term in the section that you would like to view attendance

+ Response 200
    [
        {
            "rows": [
                {
                    "name": "First name",
                    "field": "firstname",
                    "width": "100px",
                    "formatter": "registerBoldFormatter"
                },
                {
                    "name": "Last name",
                    "field": "lastname",
                    "width": "100px",
                    "formatter": "registerBoldFormatter"
                },
                {
                    "name": "Total",
                    "field": "total",
                    "width": "60px",
                    "formatter": "registerBoldFormatter"
                }
            ],
            "noscroll": true
        },
        {
            "rows": [
                {
                    "name": "2017-10-17",
                    "field": "2017-10-17",
                    "formatter": "doneFormatter",
                    "width": "110px",
                    "tooltip": "EventA"
                },
                {
                    "name": "2017-10-24",
                    "field": "2017-10-24",
                    "formatter": "doneFormatter",
                    "width": "110px",
                    "tooltip": "EventB"
                },
                {
                    "name": "2017-10-31",
                    "field": "2017-10-31",
                    "formatter": "doneFormatter",
                    "width": "110px",
                    "tooltip": "EventC"
                },
                {
                    "name": "2017-11-07",
                    "field": "2017-11-07",
                    "formatter": "doneFormatter",
                    "width": "110px",
                    "tooltip": "EventD"
                },
                {
                    "name": "2017-11-14",
                    "field": "2017-11-14",
                    "formatter": "doneFormatter",
                    "width": "110px",
                    "tooltip": "EventE"
                }
            ]
        }
    ]


## Events [/ext/events]

### Get List of Events [POST /ext/events/summary/?action=get&sectionid={}&termid={}]
+ Parameters
    + sectionid (required, int) - Section that the events are being loaded from
    + termid (required, int) - Term that the events are being loaded from

+ Response 200

    {
        "identifier": "eventid",
        "items": [
            {
                "eventid": "681",
                "name": "Place",
                "date": "04/10/2015",
                "startdate_g": "2015-10-04",
                "startdate": "04/10/2015",
                "enddate": "09/10/2015",
                "starttime": null,
                "endtime": null,
                "cost": "98.00",
                "location": "Cool Place",
                "yes": 0,
                "no": 0,
                "reserved": 0,
                "invited": 1,
                "shown": 0,
                "x": 21
            }
        ]
    }

### Get Event Attendance [POST /ext/events/event/?action=getAttendance&eventid={}&sectionid={}&termid={}]
+ Parameters
    + eventid (required, int) - ID of the event
    + sectionid (required, int) - ID of the section of the event
    + termid (required, int) - ID of the term the event takes place
    
+ Response 200
    {
        "identifier": "scoutid",
        "eventid": "21952",
        "items": [
            {
                "scoutid": "1051",
                "attending": "Yes",
                "payment": "Automatic",
                "firstname": "Foo",
                "lastname": "Bar",
                "dob": "1000-06-26",
                "patrolid": "0",
                "sf_1": "Test",
                "sf_2": "B"
            },
            {
                "scoutid": "32250",
                "attending": "Invited",
                "payment": "Automatic",
                "firstname": "Bar",
                "lastname": "Foo",
                "dob": "2100-09-05",
                "patrolid": "0",
                "sf_1": "",
                "sf_2": ""
            },
            {
                "scoutid": "37984",
                "attending": "No",
                "payment": "Automatic",
                "firstname": "Blah",
                "lastname": "Beep",
                "dob": "9999-02-06",
                "patrolid": "0",
                "sf_1": "",
                "sf_2": ""
            }
        ]
    }

### Get Event Structure [POST /ext/events/event/?action=getStructureForEvent&sectionid={}&eventid={}]
+ Parameters
    + eventid (required, int) - ID of the event
    + sectionid (required, int) - ID of the section of the event

+ Response 200
    {
        "eventid": "21952",
        "name": "Cub Camp",
        "type": null,
        "startdate": "2017-12-08",
        "enddate": "2017-12-10",
        "starttime": "17:00:00",
        "endtime": "14:30:00",
        "cost": "0.00",
        "location": "Cool Scouty Place",
        "notes": "",
        "notepad": "",
        "publicnotes": "Y'all should come to my very cool scouty thing",
        "config": "[{\"id\":\"sf_1\",\"name\":\"Scout Group\",\"pL\":\"Scout Group\",\"pR\":\"1\",\"pub\":true},{\"id\":\"sf_2\",\"name\":\"Scout Section\",\"pL\":\"Scout Section (ie. Cubs, Leaders, Rovers)\",\"pR\":\"1\",\"pub\":true},{\"id\":\"sf_3\",\"name\":\"Allow Paracetamol\",\"pL\":\"Do you allow your child to be given Paracetamol if necessary?\",\"pR\":\"\",\"pub\":true},{\"id\":\"sf_4\",\"name\":\"Special Assistance Required\",\"pL\":\"Will you\\/your child require any assistance with activities?\",\"pR\":\"false\",\"pub\":true},{\"id\":\"sf_5\",\"name\":\"Dietary\\/Medical Requirements\",\"pL\":\"Do you\\/your child have an dietary or medical requirements?\",\"pR\":\"\",\"pub\":true},{\"id\":\"sf_6\",\"name\":\"Emergency Contact\",\"pL\":\"Emergency Contact Name and Phone Number\",\"pR\":\"1\",\"pub\":true},{\"id\":\"sf_8\",\"name\":\"Email\",\"pL\":\"Email address\",\"pR\":\"1\",\"pub\":true},{\"id\":\"sf_9\",\"name\":\"Photography\",\"pL\":\"Allow Photos Yes\\/No\",\"pR\":\"false\",\"pub\":true}]",
        "extra": "{\"sharing\":{\"sharee\":true,\"maxlimit\":\"0\",\"limitleaders\":\"0\"}}",
        "sectionid": "1878",
        "googlecalendar": null,
        "archived": "0",
        "soft_deleted": "0",
        "confdate": "2017-12-02",
        "allowchanges": "1",
        "disablereminders": "0",
        "attendancelimit": "0",
        "limitincludesleaders": "0",
        "allowbooking": "1",
        "attendancereminder": "3",
        "_shared_event_confdate_lock_enabled": true,
        "_shared_event_confdate_locked": true,
        "_shared_event_details_locked": false,
        "structure": [
            {
                "rows": [
                    {
                        "name": "First name",
                        "field": "firstname",
                        "width": "150px"
                    },
                    {
                        "name": "Last name",
                        "field": "lastname",
                        "width": "150px"
                    },
                    {
                        "name": "Attending",
                        "field": "attending",
                        "width": "170px",
                        "editable": false,
                        "type": "dojox.grid.cells.Select",
                        "options": [
                            "",
                            "Show in My.SCOUT",
                            "Invited",
                            "Yes",
                            "No",
                            "Reserved"
                        ]
                    }
                ],
                "noscroll": true
            },
            {
                "rows": [
                    {
                        "name": "Scout Group",
                        "raw_name": "Scout Group",
                        "field": "sf_1",
                        "pL": "Scout Group",
                        "pR": "1",
                        "width": "150px",
                        "editable": false,
                        "pub": true
                    },
                    {
                        "name": "Scout Section",
                        "raw_name": "Scout Section",
                        "field": "sf_2",
                        "pL": "Scout Section (ie. Cubs, Leaders, Rovers)",
                        "pR": "1",
                        "width": "150px",
                        "editable": false,
                        "pub": true
                    },
                    {
                        "name": "Allow Paracetamol",
                        "raw_name": "Allow Paracetamol",
                        "field": "sf_3",
                        "pL": "Do you allow your child to be given Paracetamol if necessary?",
                        "pR": "",
                        "width": "150px",
                        "editable": false,
                        "pub": true
                    },
                    {
                        "name": "Special Assistance Required",
                        "raw_name": "Special Assistance Required",
                        "field": "sf_4",
                        "pL": "Will you/your child require any assistance with activities?",
                        "pR": "false",
                        "width": "150px",
                        "editable": false,
                        "pub": true
                    },
                    {
                        "name": "Dietary/Medical Requirements",
                        "raw_name": "Dietary/Medical Requirements",
                        "field": "sf_5",
                        "pL": "Do you/your child have an dietary or medical requirements?",
                        "pR": "",
                        "width": "150px",
                        "editable": false,
                        "pub": true
                    },
                    {
                        "name": "Emergency Contact",
                        "raw_name": "Emergency Contact",
                        "field": "sf_6",
                        "pL": "Emergency Contact Name and Phone Number",
                        "pR": "1",
                        "width": "150px",
                        "editable": false,
                        "pub": true
                    },
                    {
                        "name": "Email",
                        "raw_name": "Email",
                        "field": "sf_8",
                        "pL": "Email address",
                        "pR": "1",
                        "width": "150px",
                        "editable": false,
                        "pub": true
                    },
                    {
                        "name": "Photography",
                        "raw_name": "Photography",
                        "field": "sf_9",
                        "pL": "Allow Photos Yes/No",
                        "pR": "false",
                        "width": "150px",
                        "editable": false,
                        "pub": true
                    },
                    {
                        "name": " ",
                        "field": "info",
                        "width": "10px",
                        "formatter": "historyFormatter"
                    }
                ]
            }
        ],
        "badgelinks": [],
        "equipment": false,
        "_past_event_read_only": false
    }

### Create Event [POST /ext/events/event/?action=add&sectionid={}]
+ Parameters
    + sectionid (required, int) - Section to put the event into
    
+ Request (application/x-www-form-urlencoded)
    name=Cool Scouty event
    &location=Cool Scouty Location
    &startdate=2017-12-08
    &starttime=12:00:00
    &enddate=2017-12-08
    &endtime=12:00:00
    &attendancelimit=0
    &limitincludesleaders=false
    &cost=''
    &tbc='no'
    &confdate=2017-12-08
    &allowchanges=false
    &disablereminders=true
    &allowbooking=true
    &attendancereminder=0
    &notes=''
    
+ Response 200
    {
        "id": 22418,
        "status": true,
        "error": null,
        "data": {
            "id": 22418
        },
        "meta": []
    }

### Save Notepad [POST /ext/events/event/?action=saveNotepad&sectionid={}]
+ Parameters
    + sectionid (required, int) - Section in which the event lies

+ Request (application/x-www-form-urlencoded)
    eventid=22418
    &notepad=<p>notepad stuff!</p>

+ Response 200
    {"ok":true}

    
### Save My.Scout Details [POST /ext/events/event/?action=saveNotepad&sectionid={}]
+ Parameters
    + sectionid (required, int) - Section in which the event lies
    
+ Request (application/x-www-form-urlencoded)
    eventid=22418
    &pnnotepad=<p>my.scout stuff!</p>

+ Response 200
    {"ok":true}
    
## Go Cardless Payments [/ext/finances/onlinepayments]

### Get List of GC Payment Schedules [POST /ext/events/onlinepayments/action=getSchemes]
Used to get a list of payment schedules (per section) that you have access to.

+ Parameters

+ Request (application/x-www-form-urlencoded)
    sectionid: (required,int) - The section ID you want the schedules for.

+ Response 200 (application/json)

    {
        "identifier": "schemeid",
        "label": "name",
        "has_accounts": true,
        "items": [
            {
                "schemeid": "9904",
                "name": "Beaver Subs"
            },
            {
                "schemeid": "11895",
                "name": "Beaver Events"
            }
        ]
    }

## Group Dashboard [/ext/dashboard]

### Send Email Across Group [POST /ext/dashboard/?action=sendGroupEmail]

+ Parameters
    + from (required, email) - valid email address which is set as the 'reply to' of the email sent by OSM
    + subject (reqired, string) - Subject of email
    + body (reqired, HTML) - body of the email
    + sections (reqired, int) - JSON array of sectionIDs to send the email to

+ Request (application/x-www-form-urlencoded)
    
        from={from}&
        subject={subject}&
        body={body}&
        emails={sections}
